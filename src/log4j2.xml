<?xml version="1.0" encoding="UTF-8"?>
<configuration status="error">

	<!--先定义所有的appender -->
	<appenders>

		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出info及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!--是输出日志的格式 -->
			<PatternLayout>
				<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %C %L: %m%n</pattern>
			</PatternLayout>
		</Console>

		<!--这个会打印出所有的DEBUG级信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RuningTimeDebug" fileName="./log/debug.log"
			filePattern="./log/$${date:yyyy-MM}/debug-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="debug" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout>
				<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %class{36} %L %M : %m%n
				</pattern>
			</PatternLayout>
			<SizeBasedTriggeringPolicy size="200MB" />
		</RollingFile>

		<!--这个会打印出所有的INFO级信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RuningTimeInfo" fileName="./log/info.log"
			filePattern="./log/$${date:yyyy-MM}/info-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout>
				<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level : %m%n</pattern>
			</PatternLayout>
			<SizeBasedTriggeringPolicy size="200MB" />
		</RollingFile>

		<!--这个会打印出所有的WARN级信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RuningTimeWarn" fileName="./log/warn.log"
			filePattern="./log/$${date:yyyy-MM}/warn-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="warn" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout>
				<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %class{36} %L %M : %m%n
				</pattern>
			</PatternLayout>
			<SizeBasedTriggeringPolicy size="200MB" />
		</RollingFile>

		<!--文件会打印出所有ERROR级信息，这个log每次运行程序会自动清空，由append属性决定. -->
		<RollingFile name="RuningTimeError" fileName="./log/error.log"
			filePattern="./log/$${date:yyyy-MM}/error-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="error" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout>
				<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %class{36} %L %M : %m%n
				</pattern>
			</PatternLayout>
			<SizeBasedTriggeringPolicy size="200MB" />
		</RollingFile>

		<!--这个会打印出所有的FATAL级信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RuningTimeFatal" fileName="./log/fatal.log"
			filePattern="./log/$${date:yyyy-MM}/stat-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="fatal" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!-- <PatternLayout charset="UTF-8" pattern="%d{yyyy-MM-dd 'at' HH:mm:ss 
				z} %-5level %class{36} %L %M - %msg%xEx%n" /> -->
			<PatternLayout charset="UTF-8"
				pattern="%d{yyyy-MM-dd 'at' HH:mm:ss} %L %M - %msg%xEx%n" />
			<SizeBasedTriggeringPolicy size="200MB" />
		</RollingFile>

		<!--Stat Log 这个会打印出所有的DEBUG级信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RuningTimeStat" fileName="./log/stat.log"
			filePattern="./log/$${date:yyyy-MM}/stat-%d{MM-dd-yyyy}-%i.log.zip">
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout>
				<pattern>%m%n</pattern>
			</PatternLayout>
			<SizeBasedTriggeringPolicy size="500MB" />
		</RollingFile>
	</appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--建立一个默认的root的logger -->

		<root level="trace">
			<appender-ref ref="Console" />
			<appender-ref ref="RuningTimeDebug" />
			<appender-ref ref="RuningTimeInfo" />
			<appender-ref ref="RuningTimeWarn" />
			<appender-ref ref="RuningTimeError" />
			<appender-ref ref="RuningTimeFatal" />
		</root>

		<!--专门为统计建立的一个logger；neme要填写统计类的package的路径 -->
		<logger name="com.nebula.stevedore.deck.stat" level="info"
			additivity="false">
			<appender-ref ref="RuningTimeStat" />
		</logger>
	</loggers>
</configuration>
